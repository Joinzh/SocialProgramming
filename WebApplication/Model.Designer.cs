//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "UserEntry", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication.User), "Entry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication.Entry), true)]
[assembly: EdmRelationshipAttribute("Model", "CategoryEntry", "Category", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication.Category), "Entry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication.Entry))]
[assembly: EdmRelationshipAttribute("Model", "UserPage", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication.User), "Page", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication.Page), true)]
[assembly: EdmRelationshipAttribute("Model", "EntryKeyword", "Entry", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication.Entry), "Keyword", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication.Keyword))]
[assembly: EdmRelationshipAttribute("Model", "EntryFile", "Entry", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(WebApplication.Entry), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(WebApplication.File), true)]

#endregion

namespace WebApplication
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ModelContainer object using the connection string found in the 'ModelContainer' section of the application configuration file.
        /// </summary>
        public ModelContainer() : base("name=ModelContainer", "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelContainer object.
        /// </summary>
        public ModelContainer(string connectionString) : base(connectionString, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ModelContainer object.
        /// </summary>
        public ModelContainer(EntityConnection connection) : base(connection, "ModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Entry> Entries
        {
            get
            {
                if ((_Entries == null))
                {
                    _Entries = base.CreateObjectSet<Entry>("Entries");
                }
                return _Entries;
            }
        }
        private ObjectSet<Entry> _Entries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Page> Pages
        {
            get
            {
                if ((_Pages == null))
                {
                    _Pages = base.CreateObjectSet<Page>("Pages");
                }
                return _Pages;
            }
        }
        private ObjectSet<Page> _Pages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Setting> Settings
        {
            get
            {
                if ((_Settings == null))
                {
                    _Settings = base.CreateObjectSet<Setting>("Settings");
                }
                return _Settings;
            }
        }
        private ObjectSet<Setting> _Settings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeedBack> FeedBacks
        {
            get
            {
                if ((_FeedBacks == null))
                {
                    _FeedBacks = base.CreateObjectSet<FeedBack>("FeedBacks");
                }
                return _FeedBacks;
            }
        }
        private ObjectSet<FeedBack> _FeedBacks;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Keyword> Keywords
        {
            get
            {
                if ((_Keywords == null))
                {
                    _Keywords = base.CreateObjectSet<Keyword>("Keywords");
                }
                return _Keywords;
            }
        }
        private ObjectSet<Keyword> _Keywords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Entries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntries(Entry entry)
        {
            base.AddObject("Entries", entry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Pages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPages(Page page)
        {
            base.AddObject("Pages", page);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Settings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSettings(Setting setting)
        {
            base.AddObject("Settings", setting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeedBacks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeedBacks(FeedBack feedBack)
        {
            base.AddObject("FeedBacks", feedBack);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Keywords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToKeywords(Keyword keyword)
        {
            base.AddObject("Keywords", keyword);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="huTitle">Initial value of the huTitle property.</param>
        /// <param name="enTitle">Initial value of the enTitle property.</param>
        public static Category CreateCategory(global::System.Int32 id, global::System.String huTitle, global::System.String enTitle)
        {
            Category category = new Category();
            category.Id = id;
            category.huTitle = huTitle;
            category.enTitle = enTitle;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String huTitle
        {
            get
            {
                return _huTitle;
            }
            set
            {
                OnhuTitleChanging(value);
                ReportPropertyChanging("huTitle");
                _huTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("huTitle");
                OnhuTitleChanged();
            }
        }
        private global::System.String _huTitle;
        partial void OnhuTitleChanging(global::System.String value);
        partial void OnhuTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String enTitle
        {
            get
            {
                return _enTitle;
            }
            set
            {
                OnenTitleChanging(value);
                ReportPropertyChanging("enTitle");
                _enTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("enTitle");
                OnenTitleChanged();
            }
        }
        private global::System.String _enTitle;
        partial void OnenTitleChanging(global::System.String value);
        partial void OnenTitleChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CategoryEntry", "Entry")]
        public EntityCollection<Entry> Entries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entry>("Model.CategoryEntry", "Entry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entry>("Model.CategoryEntry", "Entry", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Entry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Entry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Entry object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="huTitle">Initial value of the huTitle property.</param>
        /// <param name="enTitle">Initial value of the enTitle property.</param>
        /// <param name="published">Initial value of the Published property.</param>
        /// <param name="publishedDate">Initial value of the PublishedDate property.</param>
        /// <param name="huContent">Initial value of the huContent property.</param>
        /// <param name="enContent">Initial value of the enContent property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="huIntroduction">Initial value of the huIntroduction property.</param>
        /// <param name="enIntroduction">Initial value of the enIntroduction property.</param>
        public static Entry CreateEntry(global::System.Int32 id, global::System.String huTitle, global::System.String enTitle, global::System.Boolean published, global::System.DateTime publishedDate, global::System.String huContent, global::System.String enContent, global::System.Int32 userId, global::System.String huIntroduction, global::System.String enIntroduction)
        {
            Entry entry = new Entry();
            entry.Id = id;
            entry.huTitle = huTitle;
            entry.enTitle = enTitle;
            entry.Published = published;
            entry.PublishedDate = publishedDate;
            entry.huContent = huContent;
            entry.enContent = enContent;
            entry.UserId = userId;
            entry.huIntroduction = huIntroduction;
            entry.enIntroduction = enIntroduction;
            return entry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String huTitle
        {
            get
            {
                return _huTitle;
            }
            set
            {
                OnhuTitleChanging(value);
                ReportPropertyChanging("huTitle");
                _huTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("huTitle");
                OnhuTitleChanged();
            }
        }
        private global::System.String _huTitle;
        partial void OnhuTitleChanging(global::System.String value);
        partial void OnhuTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String enTitle
        {
            get
            {
                return _enTitle;
            }
            set
            {
                OnenTitleChanging(value);
                ReportPropertyChanging("enTitle");
                _enTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("enTitle");
                OnenTitleChanged();
            }
        }
        private global::System.String _enTitle;
        partial void OnenTitleChanging(global::System.String value);
        partial void OnenTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Published
        {
            get
            {
                return _Published;
            }
            set
            {
                OnPublishedChanging(value);
                ReportPropertyChanging("Published");
                _Published = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Published");
                OnPublishedChanged();
            }
        }
        private global::System.Boolean _Published;
        partial void OnPublishedChanging(global::System.Boolean value);
        partial void OnPublishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PublishedDate
        {
            get
            {
                return _PublishedDate;
            }
            set
            {
                OnPublishedDateChanging(value);
                ReportPropertyChanging("PublishedDate");
                _PublishedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishedDate");
                OnPublishedDateChanged();
            }
        }
        private global::System.DateTime _PublishedDate;
        partial void OnPublishedDateChanging(global::System.DateTime value);
        partial void OnPublishedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String huContent
        {
            get
            {
                return _huContent;
            }
            set
            {
                OnhuContentChanging(value);
                ReportPropertyChanging("huContent");
                _huContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("huContent");
                OnhuContentChanged();
            }
        }
        private global::System.String _huContent;
        partial void OnhuContentChanging(global::System.String value);
        partial void OnhuContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String enContent
        {
            get
            {
                return _enContent;
            }
            set
            {
                OnenContentChanging(value);
                ReportPropertyChanging("enContent");
                _enContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("enContent");
                OnenContentChanged();
            }
        }
        private global::System.String _enContent;
        partial void OnenContentChanging(global::System.String value);
        partial void OnenContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String huIntroduction
        {
            get
            {
                return _huIntroduction;
            }
            set
            {
                OnhuIntroductionChanging(value);
                ReportPropertyChanging("huIntroduction");
                _huIntroduction = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("huIntroduction");
                OnhuIntroductionChanged();
            }
        }
        private global::System.String _huIntroduction;
        partial void OnhuIntroductionChanging(global::System.String value);
        partial void OnhuIntroductionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String enIntroduction
        {
            get
            {
                return _enIntroduction;
            }
            set
            {
                OnenIntroductionChanging(value);
                ReportPropertyChanging("enIntroduction");
                _enIntroduction = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("enIntroduction");
                OnenIntroductionChanged();
            }
        }
        private global::System.String _enIntroduction;
        partial void OnenIntroductionChanging(global::System.String value);
        partial void OnenIntroductionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "UserEntry", "User")]
        public User Creator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.UserEntry", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.UserEntry", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.UserEntry", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model.UserEntry", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "CategoryEntry", "Category")]
        public EntityCollection<Category> Categories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Category>("Model.CategoryEntry", "Category");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Category>("Model.CategoryEntry", "Category", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "EntryKeyword", "Keyword")]
        public EntityCollection<Keyword> Keywords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Keyword>("Model.EntryKeyword", "Keyword");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Keyword>("Model.EntryKeyword", "Keyword", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "EntryFile", "File")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("Model.EntryFile", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("Model.EntryFile", "File", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="FeedBack")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeedBack : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeedBack object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="message">Initial value of the Message property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        /// <param name="sendDate">Initial value of the SendDate property.</param>
        /// <param name="checked">Initial value of the Checked property.</param>
        public static FeedBack CreateFeedBack(global::System.Int32 id, global::System.String message, global::System.String emailAddress, global::System.DateTime sendDate, global::System.Boolean @checked)
        {
            FeedBack feedBack = new FeedBack();
            feedBack.Id = id;
            feedBack.Message = message;
            feedBack.EmailAddress = emailAddress;
            feedBack.SendDate = sendDate;
            feedBack.Checked = @checked;
            return feedBack;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Message
        {
            get
            {
                return _Message;
            }
            set
            {
                OnMessageChanging(value);
                ReportPropertyChanging("Message");
                _Message = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Message");
                OnMessageChanged();
            }
        }
        private global::System.String _Message;
        partial void OnMessageChanging(global::System.String value);
        partial void OnMessageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SendDate
        {
            get
            {
                return _SendDate;
            }
            set
            {
                OnSendDateChanging(value);
                ReportPropertyChanging("SendDate");
                _SendDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SendDate");
                OnSendDateChanged();
            }
        }
        private global::System.DateTime _SendDate;
        partial void OnSendDateChanging(global::System.DateTime value);
        partial void OnSendDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Checked
        {
            get
            {
                return _Checked;
            }
            set
            {
                OnCheckedChanging(value);
                ReportPropertyChanging("Checked");
                _Checked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Checked");
                OnCheckedChanged();
            }
        }
        private global::System.Boolean _Checked;
        partial void OnCheckedChanging(global::System.Boolean value);
        partial void OnCheckedChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        /// <param name="entryId">Initial value of the EntryId property.</param>
        public static File CreateFile(global::System.Int32 id, global::System.String name, global::System.String location, global::System.Int32 entryId)
        {
            File file = new File();
            file.Id = id;
            file.Name = name;
            file.Location = location;
            file.EntryId = entryId;
            return file;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Location
        {
            get
            {
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private global::System.String _Location;
        partial void OnLocationChanging(global::System.String value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntryId
        {
            get
            {
                return _EntryId;
            }
            set
            {
                OnEntryIdChanging(value);
                ReportPropertyChanging("EntryId");
                _EntryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntryId");
                OnEntryIdChanged();
            }
        }
        private global::System.Int32 _EntryId;
        partial void OnEntryIdChanging(global::System.Int32 value);
        partial void OnEntryIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "EntryFile", "Entry")]
        public Entry Entry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entry>("Model.EntryFile", "Entry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entry>("Model.EntryFile", "Entry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entry> EntryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entry>("Model.EntryFile", "Entry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entry>("Model.EntryFile", "Entry", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Keyword")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Keyword : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Keyword object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Keyword CreateKeyword(global::System.Int32 id, global::System.String value, global::System.Boolean type)
        {
            Keyword keyword = new Keyword();
            keyword.Id = id;
            keyword.Value = value;
            keyword.Type = type;
            return keyword;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Boolean _Type;
        partial void OnTypeChanging(global::System.Boolean value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "EntryKeyword", "Entry")]
        public EntityCollection<Entry> Entries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entry>("Model.EntryKeyword", "Entry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entry>("Model.EntryKeyword", "Entry", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Page")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Page : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Page object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="huTitle">Initial value of the huTitle property.</param>
        /// <param name="enTitle">Initial value of the enTitle property.</param>
        /// <param name="published">Initial value of the Published property.</param>
        /// <param name="huContent">Initial value of the huContent property.</param>
        /// <param name="enContent">Initial value of the enContent property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        public static Page CreatePage(global::System.Int32 id, global::System.String huTitle, global::System.String enTitle, global::System.Boolean published, global::System.String huContent, global::System.String enContent, global::System.Int32 userId)
        {
            Page page = new Page();
            page.Id = id;
            page.huTitle = huTitle;
            page.enTitle = enTitle;
            page.Published = published;
            page.huContent = huContent;
            page.enContent = enContent;
            page.UserId = userId;
            return page;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String huTitle
        {
            get
            {
                return _huTitle;
            }
            set
            {
                OnhuTitleChanging(value);
                ReportPropertyChanging("huTitle");
                _huTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("huTitle");
                OnhuTitleChanged();
            }
        }
        private global::System.String _huTitle;
        partial void OnhuTitleChanging(global::System.String value);
        partial void OnhuTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String enTitle
        {
            get
            {
                return _enTitle;
            }
            set
            {
                OnenTitleChanging(value);
                ReportPropertyChanging("enTitle");
                _enTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("enTitle");
                OnenTitleChanged();
            }
        }
        private global::System.String _enTitle;
        partial void OnenTitleChanging(global::System.String value);
        partial void OnenTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Published
        {
            get
            {
                return _Published;
            }
            set
            {
                OnPublishedChanging(value);
                ReportPropertyChanging("Published");
                _Published = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Published");
                OnPublishedChanged();
            }
        }
        private global::System.Boolean _Published;
        partial void OnPublishedChanging(global::System.Boolean value);
        partial void OnPublishedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String huContent
        {
            get
            {
                return _huContent;
            }
            set
            {
                OnhuContentChanging(value);
                ReportPropertyChanging("huContent");
                _huContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("huContent");
                OnhuContentChanged();
            }
        }
        private global::System.String _huContent;
        partial void OnhuContentChanging(global::System.String value);
        partial void OnhuContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String enContent
        {
            get
            {
                return _enContent;
            }
            set
            {
                OnenContentChanging(value);
                ReportPropertyChanging("enContent");
                _enContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("enContent");
                OnenContentChanged();
            }
        }
        private global::System.String _enContent;
        partial void OnenContentChanging(global::System.String value);
        partial void OnenContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "UserPage", "User")]
        public User Creator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.UserPage", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.UserPage", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> CreatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("Model.UserPage", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("Model.UserPage", "User", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Setting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Setting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Setting object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Setting CreateSetting(global::System.Int32 id, global::System.String key, global::System.String value)
        {
            Setting setting = new Setting();
            setting.Id = id;
            setting.Key = key;
            setting.Value = value;
            return setting;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String username, global::System.String password)
        {
            User user = new User();
            user.Id = id;
            user.Username = username;
            user.Password = password;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "UserEntry", "Entry")]
        public EntityCollection<Entry> MyEntries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entry>("Model.UserEntry", "Entry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entry>("Model.UserEntry", "Entry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "UserPage", "Page")]
        public EntityCollection<Page> MyPages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Page>("Model.UserPage", "Page");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Page>("Model.UserPage", "Page", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
